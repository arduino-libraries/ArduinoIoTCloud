language: generic
env:
  global:
    - IDE_VERSION=1.8.9
matrix:
  include:
    - env:
        - BOARD="arduino:samd:mkr1000"
    - env:
        - BOARD="arduino:samd:mkrwifi1010"
    - env:
        - BOARD="arduino:samd:mkrgsm1400"
    - env:
        - NAME=Code Formatting Check
      # must define an empty before_install phase, otherwise the default one is used
      before_install: true
      install:
        # install Artistic Style code formatter tool: http://astyle.sourceforge.net
        - |
          mkdir "${HOME}/astyle";
          wget --no-verbose --output-document="${HOME}/astyle/astyle.tar.gz" "https://iweb.dl.sourceforge.net/project/astyle/astyle/astyle%203.1/astyle_3.1_linux.tar.gz";
          tar --extract --file="${HOME}/astyle/astyle.tar.gz" --directory="${HOME}/astyle";
          cd "${HOME}/astyle/astyle/build/gcc";
          make;
          export PATH=$PWD/bin:$PATH;
          cd "$TRAVIS_BUILD_DIR"
        # download Arduino's Artistic Style configuration file
        - wget --directory-prefix="${HOME}/astyle" https://raw.githubusercontent.com/arduino/Arduino/master/build/shared/examples_formatter.conf
      script:
        # check code formatting
        - find . -regextype posix-extended -path './.git' -prune -or \( -iregex '.*\.((ino)|(h)|(hpp)|(hh)|(hxx)|(h\+\+)|(cpp)|(cc)|(cxx)|(c\+\+)|(cp)|(c)|(ipp)|(ii)|(ixx)|(inl)|(tpp)|(txx)|(tpl))$' -and -type f \) -print0 | xargs -0 -L1 bash -c 'if ! diff $0 <(astyle --options=${HOME}/astyle/examples_formatter.conf --dry-run < $0); then echo "Non-compliant code formatting in $0"; false; fi'
# default phases
before_install:
  - wget http://downloads.arduino.cc/arduino-$IDE_VERSION-linux64.tar.xz
  - tar xf arduino-$IDE_VERSION-linux64.tar.xz
  - mv arduino-$IDE_VERSION $HOME/arduino-ide
  - export PATH=$PATH:$HOME/arduino-ide
  - if [[ "$BOARD" =~ "arduino:samd:" ]]; then
      arduino --install-boards arduino:samd;
    fi
  - arduino --install-library ArduinoCloudThing
  - arduino --install-library ArduinoECCX08
  - arduino --install-library ArduinoIoTCloudBearSSL
  - arduino --install-library ArduinoMqttClient
  - arduino --install-library MKRGSM
  - arduino --install-library RTCZero
  - arduino --install-library WiFi101
  - arduino --install-library WiFiNINA
  - buildExampleSketch() { arduino --verbose-build --verify --board $BOARD $PWD/examples/$1/$1.ino; }
  - buildExampleUtilitySketch() { arduino --verbose-build --verify --board $BOARD $PWD/examples/utility/$1/$1.ino; }
install:
  - mkdir -p $HOME/Arduino/libraries
  - ln -s $PWD $HOME/Arduino/libraries/.
script:
  - buildExampleSketch ArduinoIoTCloud_LED_switch
  - buildExampleSketch ArduinoIoTCloud_Travis_CI
  - buildExampleUtilitySketch Provisioning
notifications:
  webhooks:
    urls:
      - https://www.travisbuddy.com/
    on_success: never
    on_failure: always

