name: Compile Examples

on:
  pull_request:
    paths:
      - ".github/workflows/compile-examples.yml"
      - "examples/**"
      - "src/**"
  push:
    paths:
      - ".github/workflows/compile-examples.yml"
      - "examples/**"
      - "src/**"

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # libraries to install for all boards
      UNIVERSAL_LIBRARIES: |
        # Install the ArduinoIoTCloud library from the repository
        - source-path: ./
        - source-url: https://github.com/arduino-libraries/Arduino_ConnectionHandler.git
          version: latest
        - name: Arduino_DebugUtils
        - name: ArduinoMqttClient
      # sketch paths to compile (recursive) for all boards
      UNIVERSAL_SKETCH_PATHS: '"examples/ArduinoIoTCloud-Advanced" "examples/ArduinoIoTCloud-Basic" "examples/utility/ArduinoIoTCloud_Travis_CI"'
      ARDUINOCORE_MBED_STAGING_PATH: extras/ArduinoCore-mbed
      ARDUINOCORE_API_STAGING_PATH: extras/ArduinoCore-API

    strategy:
      fail-fast: false

      matrix:
        board: [
          {"fqbn": "arduino:samd:mkr1000", "type": "mkr1000"},
          {"fqbn": "arduino:samd:mkrwifi1010", "type": "nina"},
          {"fqbn": "arduino:samd:nano_33_iot", "type": "nina"},
          {"fqbn": "arduino:samd:mkrwan1300", "type": "wan"},
          {"fqbn": "arduino:samd:mkrgsm1400", "type": "gsm"},
          {"fqbn": "arduino:samd:mkrnb1500", "type": "nb"},
          {"fqbn": "arduino-beta:mbed:envie_m4", "type": "mbed"},
          {"fqbn": "arduino-beta:mbed:envie_m7", "type": "mbed"},
          {"fqbn": "esp8266:esp8266:huzzah", "type": "esp8266"}
        ]

        # make board type-specific customizations to the matrix jobs
        include:
          # MKR 1000
          - board:
              type: "mkr1000"
            platforms: |
              # Install Arduino SAMD Boards via Boards Manager for the toolchain
              - name: arduino:samd
            libraries: |
              - name: ArduinoECCX08
              - name: RTCZero
              - name: WiFi101
            sketch-paths: '"examples/utility/Provisioning"'
          # MKR WiFi 1010, Nano 33 IoT
          - board:
              type: "nina"
            platforms: |
              # Install Arduino SAMD Boards via Boards Manager for the toolchain
              - name: arduino:samd
            libraries: |
              - name: ArduinoECCX08
              - name: RTCZero
              - source-url: https://github.com/arduino-libraries/WiFiNINA.git
              - name: Arduino_JSON
              - name: ArduinoBearSSL
            sketch-paths: '"examples/utility/Provisioning" "examples/utility/SelfProvisioning"'
          # LoRaWAN boards
          - board:
              type: "wan"
            platforms: |
              - name: arduino:samd
            libraries: |
              - name: ArduinoECCX08
              - name: RTCZero
              - name: MKRWAN
            sketch-paths:
          # GSM boards
          - board:
              type: "gsm"
            platforms: |
              - name: arduino:samd
            libraries: |
              - name: ArduinoECCX08
              - name: RTCZero
              - name: MKRGSM
            sketch-paths: '"examples/utility/Provisioning"'
          # NB boards
          - board:
              type: "nb"
            platforms: |
              - name: arduino:samd
            libraries: |
              - name: ArduinoECCX08
              - name: RTCZero
              - name: MKRNB
            sketch-paths: '"examples/utility/Provisioning"'
          # Portenta
          - board:
              type: "mbed"
            platforms: |
              # Install Arduino mbed-Enabled Boards via Boards Manager for the toolchain
              - name: arduino-beta:mbed
              # Overwrite the Arduino mbed-Enabled Boards release version with version from the tip of the master branch (located in local path because of the need to first install ArduinoCore-API)
              - source-path: extras/ArduinoCore-mbed
                name: arduino-beta:mbed
            libraries: |
              - name: ArduinoECCX08
            sketch-paths: '"examples/utility/Provisioning"'
          # ESP8266 boards
          - board:
              type: "esp8266"
            platforms: |
              # Install ESP8266 platform via Boards Manager
              - name: esp8266:esp8266
                source-url: https://arduino.esp8266.com/stable/package_esp8266com_index.json
            libraries:
            sketch-paths:

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # it's necessary to checkout the platform before installing it so that the ArduinoCore-API dependency can be added
      - name: Checkout ArduinoCore-mbed
        # this step only needed when the Arduino mbed-Enabled Boards platform sourced from the repository is being used
        if: matrix.board.type == 'mbed'
        uses: actions/checkout@v2
        with:
          repository: arduino/ArduinoCore-mbed
          # the arduino/actions/libraries/compile-examples action will install the platform from this path
          path: ${{ env.ARDUINOCORE_MBED_STAGING_PATH }}

      - name: Remove ArduinoCore-API symlink from Arduino mbed-Enabled Boards platform
        # this step only needed when the Arduino mbed-Enabled Boards platform sourced from the repository is being used
        if: matrix.board.type == 'mbed'
        run: rm "${{ env.ARDUINOCORE_MBED_STAGING_PATH }}/cores/arduino/api"

      - name: Checkout ArduinoCore-API
        # this step only needed when the Arduino mbed-Enabled Boards platform sourced from the repository is being used
        if: matrix.board.type == 'mbed'
        uses: actions/checkout@v2
        with:
          repository: arduino/ArduinoCore-API
          # as specified at https://github.com/arduino/ArduinoCore-mbed/blob/master/README.md#installation
          ref: namespace_arduino
          path: ${{ env.ARDUINOCORE_API_STAGING_PATH }}

      - name: Install ArduinoCore-API
        # this step only needed when the Arduino mbed-Enabled Boards platform sourced from the repository is being used
        if: matrix.board.type == 'mbed'
        run: |
          mv "${{ env.ARDUINOCORE_API_STAGING_PATH }}/api" "${{ env.ARDUINOCORE_MBED_STAGING_PATH }}/cores/arduino"

      - name: Compile examples
        uses: arduino/actions/libraries/compile-examples@master
        with:
          platforms: ${{ matrix.platforms }}
          fqbn: ${{ matrix.board.fqbn }}
          libraries: |
            ${{ env.UNIVERSAL_LIBRARIES }}
            ${{ matrix.libraries }}
          sketch-paths: "${{ env.UNIVERSAL_SKETCH_PATHS }} ${{ matrix.sketch-paths }}"
          size-report-sketch: 'ArduinoIoTCloud_Travis_CI'
          enable-size-deltas-report: 'true'

      - name: Write data to size trends report spreadsheet
        # Update report on every push to the master branch
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: arduino/actions/libraries/report-size-trends@master
        with:
          google-key-file: ${{ secrets.GOOGLE_KEY_FILE }}
          spreadsheet-id: 1I6NZkpZpf8KugBkE92adB1Z3_b7ZepOpCdYTOigJpN4

      - name: Save memory usage change report as artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v1
        with:
          name: 'size-deltas-reports'
          path: 'size-deltas-reports'
